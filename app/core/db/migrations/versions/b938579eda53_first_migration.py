"""First migration

Revision ID: b938579eda53
Revises: 
Create Date: 2023-05-21 12:44:49.419201

"""
import os

import sqlalchemy as sa
from alembic import op
from dotenv import load_dotenv

load_dotenv(".env")


# revision identifiers, used by Alembic.
revision = "b938579eda53"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("name", sa.String(length=150), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("name", sa.String(length=150), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "documents",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("name", sa.String(length=150), nullable=False),
        sa.Column("document_id", sa.String(length=300), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"], ["categories.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("document_id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("first_name", sa.String(length=150), nullable=True),
        sa.Column("last_name", sa.String(length=150), nullable=True),
        sa.Column("town", sa.String(length=150), nullable=True),
        sa.Column("telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("is_banned", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["user_roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute(
        "INSERT INTO user_roles (id, created_at, name) VALUES (1, NOW(), 'Admin')"
    )
    op.execute(
        "INSERT INTO user_roles (id, created_at, name) VALUES (2, NOW(), 'Moderator')"
    )
    op.execute(
        "INSERT INTO user_roles (id, created_at, name) VALUES (3, NOW(), 'User')"
    )
    op.execute(
        f"INSERT INTO users (id, created_at, first_name, last_name, role_id, telegram_id) VALUES (0, NOW(), 'Admin', 'Main', 1, {os.environ['ADMIN_ID']})"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users")
    op.drop_table("documents")
    op.drop_table("user_roles")
    op.drop_table("categories")
    # ### end Alembic commands ###
